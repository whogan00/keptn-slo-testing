---
spec_version: '1.0'
indicators:
  containers_running: sum:docker.containers.running{client:$PROJECT,service:$SERVICE,env:$STAGE}
  jvm_memory_usage: max:jvm.heap_memory{client:$PROJECT,service:$SERVICE,env:$STAGE}
  jvm_memory_max: max:jvm.heap_memory_max{client:$PROJECT,service:$SERVICE,env:$STAGE}
  jvm_gc_major_count: max:jvm.gc.major_collection_count{client:$PROJECT,service:$SERVICE,env:$STAGE}
  jvm_gc_minor_count: avg:jvm.gc.minor_collection_count{client:$PROJECT,service:$SERVICE,env:$STAGE}
  jvm_non_heap_usage: max:jvm.non_heap_memory{client:$PROJECT,service:$SERVICE,env:$STAGE}
  p75_latency: p75:trace.http.request{service:$SERVICE,env:$STAGE} by {$SERVICE}.rollup($DURATION)
  p90_latency: p90:trace.http.request{service:$SERVICE,env:$STAGE} by {$SERVICE}.rollup($DURATION)
  p95_latency: p95:trace.http.request{service:$SERVICE,env:$STAGE} by {$SERVICE}.rollup($DURATION)
  p99_latency: p99:trace.http.request{service:$SERVICE,env:$STAGE} by {$SERVICE}.rollup($DURATION)
  request_errors: sum:trace.http.request.errors{env:test,service:registration} by {service}.as_count().rollup($DURATION)
  go_heap_inuse: avg:runtime.go.mem_stats.heap_inuse{client:banner-admin,env:test,service:registration} by {service}.rollup(avg, $DURATION)
  container_restarts: min:kubernetes.containers.restarts{kube_service:keptn-golang}.rollup(min, $DURATION)